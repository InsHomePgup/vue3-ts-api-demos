/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection ES6UnusedImports
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-resolver' {
  export type ParamParserCustom = never
}

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<
      '/',
      '/',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/axios/axios01': RouteRecordInfo<
      '/axios/axios01',
      '/axios/axios01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/css/chat': RouteRecordInfo<
      '/css/chat',
      '/css/chat',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/css/flex': RouteRecordInfo<
      '/css/flex',
      '/css/flex',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/css/resp': RouteRecordInfo<
      '/css/resp',
      '/css/resp',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ts/array/index01': RouteRecordInfo<
      '/ts/array/index01',
      '/ts/array/index01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ts/index01': RouteRecordInfo<
      '/ts/index01',
      '/ts/index01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ts/index02': RouteRecordInfo<
      '/ts/index02',
      '/ts/index02',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ts/index03': RouteRecordInfo<
      '/ts/index03',
      '/ts/index03',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/ts/string/index01': RouteRecordInfo<
      '/ts/string/index01',
      '/ts/string/index01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/tsx/index01': RouteRecordInfo<
      '/tsx/index01',
      '/tsx/index01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/vue/01': RouteRecordInfo<
      '/vue/01',
      '/vue/01',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/vue/02': RouteRecordInfo<
      '/vue/02',
      '/vue/02',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes:
        | '/'
      views:
        | never
    }
    'src/pages/axios/axios01.vue': {
      routes:
        | '/axios/axios01'
      views:
        | never
    }
    'src/pages/css/chat.vue': {
      routes:
        | '/css/chat'
      views:
        | never
    }
    'src/pages/css/flex.vue': {
      routes:
        | '/css/flex'
      views:
        | never
    }
    'src/pages/css/resp.vue': {
      routes:
        | '/css/resp'
      views:
        | never
    }
    'src/pages/ts/array/index01.vue': {
      routes:
        | '/ts/array/index01'
      views:
        | never
    }
    'src/pages/ts/index01.vue': {
      routes:
        | '/ts/index01'
      views:
        | never
    }
    'src/pages/ts/index02.vue': {
      routes:
        | '/ts/index02'
      views:
        | never
    }
    'src/pages/ts/index03.vue': {
      routes:
        | '/ts/index03'
      views:
        | never
    }
    'src/pages/ts/string/index01.vue': {
      routes:
        | '/ts/string/index01'
      views:
        | never
    }
    'src/pages/tsx/index01.vue': {
      routes:
        | '/tsx/index01'
      views:
        | never
    }
    'src/pages/vue/01.vue': {
      routes:
        | '/vue/01'
      views:
        | never
    }
    'src/pages/vue/02.vue': {
      routes:
        | '/vue/02'
      views:
        | never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
